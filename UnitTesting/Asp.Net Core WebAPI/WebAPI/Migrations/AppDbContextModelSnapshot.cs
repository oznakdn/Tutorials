// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("WebAPI.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca110d28-c66c-4eee-8e20-3576b9dd26d6"),
                            CategoryName = "Phone"
                        },
                        new
                        {
                            Id = new Guid("dbc6b8d8-d514-460c-9739-ce76eeeb6429"),
                            CategoryName = "Notebook"
                        });
                });

            modelBuilder.Entity("WebAPI.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("119fab17-ce5b-49b9-ae4c-b2bf11b3f7a7"),
                            CategoryId = new Guid("ca110d28-c66c-4eee-8e20-3576b9dd26d6"),
                            Color = "Silver",
                            Price = 10000m,
                            ProductName = "Samsung",
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("054ab3c6-5604-4428-9587-852f6d7c8da4"),
                            CategoryId = new Guid("ca110d28-c66c-4eee-8e20-3576b9dd26d6"),
                            Color = "Gold",
                            Price = 20000m,
                            ProductName = "Apple",
                            Stock = 20
                        },
                        new
                        {
                            Id = new Guid("ed44afb2-3a9f-40f6-a3ff-ef76a1232348"),
                            CategoryId = new Guid("ca110d28-c66c-4eee-8e20-3576b9dd26d6"),
                            Color = "Black",
                            Price = 15000m,
                            ProductName = "Huawei",
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("5f729da8-d97a-4eb7-bd38-9bbb6a593a9d"),
                            CategoryId = new Guid("dbc6b8d8-d514-460c-9739-ce76eeeb6429"),
                            Color = "Black",
                            Price = 15000m,
                            ProductName = "Macbook",
                            Stock = 30
                        });
                });

            modelBuilder.Entity("WebAPI.Entities.Product", b =>
                {
                    b.HasOne("WebAPI.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebAPI.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
