// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _20_ComplexQueryOperators.Context;

#nullable disable

namespace _20_ComplexQueryOperators.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221215152736_InitDatabase")]
    partial class InitDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("_20_ComplexQueryOperators.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("PersonId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Description = "This is Sedat's order.",
                            PersonId = 1
                        },
                        new
                        {
                            OrderId = 2,
                            Description = "This is Burcu's order.",
                            PersonId = 2
                        },
                        new
                        {
                            OrderId = 3,
                            Description = "This is Canan's order.",
                            PersonId = 3
                        });
                });

            modelBuilder.Entity("_20_ComplexQueryOperators.Entities.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Gender = 1,
                            Name = "Sedat"
                        },
                        new
                        {
                            PersonId = 2,
                            Gender = 0,
                            Name = "Burcu"
                        },
                        new
                        {
                            PersonId = 3,
                            Gender = 0,
                            Name = "Canan"
                        });
                });

            modelBuilder.Entity("_20_ComplexQueryOperators.Entities.Photo", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PersonId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Url = "https://fotofoto.com/1"
                        },
                        new
                        {
                            PersonId = 2,
                            Url = "https://fotofoto.com/2"
                        },
                        new
                        {
                            PersonId = 3,
                            Url = "https://fotofoto.com/3"
                        });
                });

            modelBuilder.Entity("_20_ComplexQueryOperators.Entities.Order", b =>
                {
                    b.HasOne("_20_ComplexQueryOperators.Entities.Person", "Person")
                        .WithMany("Orders")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("_20_ComplexQueryOperators.Entities.Photo", b =>
                {
                    b.HasOne("_20_ComplexQueryOperators.Entities.Person", "Person")
                        .WithOne("Photo")
                        .HasForeignKey("_20_ComplexQueryOperators.Entities.Photo", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("_20_ComplexQueryOperators.Entities.Person", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Photo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
